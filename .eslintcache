[{"/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/HomeComponent.tsx":"1","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/HeaderComponent.tsx":"2","/home/shikhar/Files/Web/React/weather-forcasting-application/src/index.tsx":"3","/home/shikhar/Files/Web/React/weather-forcasting-application/src/reportWebVitals.ts":"4","/home/shikhar/Files/Web/React/weather-forcasting-application/src/App.tsx":"5","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/FooterComponent.tsx":"6","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/AboutComponent.tsx":"7","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/PromotionComponent.tsx":"8","/home/shikhar/Files/Web/React/weather-forcasting-application/src/shared/API.tsx":"9","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/Tabs/HourlyTabComponent.tsx":"10","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/Tabs/AirqualityTabComponent.tsx":"11","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/Tabs/NowTabComponent.tsx":"12","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/ContactComponent.tsx":"13","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/Tabs/DailyTabComponent.tsx":"14","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/Tabs/AlertsTabComponents.tsx":"15"},{"size":10553,"mtime":1621109988342,"results":"16","hashOfConfig":"17"},{"size":2303,"mtime":1621011202277,"results":"18","hashOfConfig":"17"},{"size":739,"mtime":1613047336821,"results":"19","hashOfConfig":"17"},{"size":425,"mtime":1611468541556,"results":"20","hashOfConfig":"17"},{"size":298,"mtime":1611665474700,"results":"21","hashOfConfig":"17"},{"size":568,"mtime":1611665377379,"results":"22","hashOfConfig":"17"},{"size":4622,"mtime":1611665145027,"results":"23","hashOfConfig":"17"},{"size":1943,"mtime":1611590901809,"results":"24","hashOfConfig":"17"},{"size":397,"mtime":1612986647805,"results":"25","hashOfConfig":"17"},{"size":2457,"mtime":1612866706837,"results":"26","hashOfConfig":"17"},{"size":4781,"mtime":1613137994142,"results":"27","hashOfConfig":"17"},{"size":3378,"mtime":1613137921655,"results":"28","hashOfConfig":"17"},{"size":5017,"mtime":1613047536245,"results":"29","hashOfConfig":"17"},{"size":3262,"mtime":1612866690344,"results":"30","hashOfConfig":"17"},{"size":1853,"mtime":1613046045743,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13i4rs8",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/HomeComponent.tsx",["70","71","72","73"],"/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/HeaderComponent.tsx",[],"/home/shikhar/Files/Web/React/weather-forcasting-application/src/index.tsx",[],["74","75"],"/home/shikhar/Files/Web/React/weather-forcasting-application/src/reportWebVitals.ts",[],["76","77"],"/home/shikhar/Files/Web/React/weather-forcasting-application/src/App.tsx",[],["78","79"],"/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/FooterComponent.tsx",[],"/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/AboutComponent.tsx",[],"/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/PromotionComponent.tsx",[],"/home/shikhar/Files/Web/React/weather-forcasting-application/src/shared/API.tsx",[],"/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/Tabs/HourlyTabComponent.tsx",["80","81","82","83","84","85"],"import './tabsStyles.css';\nimport { Tab , Tabs, Col, Row, Container } from 'react-bootstrap';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport { useEffect, useState } from 'react';\nimport Moment from 'react-moment';\n\nexport default function HourlyTab(props: any) {\n\n    const [ok, setOk] = useState(false);\n\n    useEffect(() => {\n        if(props.data !== undefined || props.data !== null){\n            setOk(true);\n        }\n    },[props]);\n\n    return (\n        <div className=\"make-visible\">\n            <h2 > Hourly Forecast </h2>\n            {ok ? \n                <div>\n                    {props.data.hourly.data.map((item:any) => {\n                        let icon_path = \"icons/\" + item.icon + \".svg\";\n                        return(\n                            <div className=\"clean-box\">\n                                \n                                <Row>\n                                    <Col xs={3}> <img className=\"minor-icons\" src={icon_path} /> </Col>\n                                    {/* <Col>Time : </Col>  */}\n                                    <Col xs={5}> <Moment unix>{item.time}</Moment> </Col>\n                                    <Col>{item.temperature} °C</Col>\n                                </Row>\n                                <Row >\n                                    <Col>{item.summary} and there is {Math.round(item.precipProbability)*100}% chance of rain.</Col> \n                                    {/* <Col xs={5}> </Col> */}\n                                </Row>\n                                <Row xs={2} md={4} >\n                                    <Col>Wind : </Col> <Col> {item.windSpeed} m/sec </Col>\n                                    <Col xs={7}>Wind Direction : </Col> <Col xs={1}> {item.windBearing}° </Col>\n                                    <Col>Humidity : </Col> <Col> {Math.round(item.humidity*100)}% </Col>\n                                    <Col>UV Index : </Col> <Col> {item.uvIndex} out of 10 </Col>\n                                    <Col>Clouds : </Col> <Col> {Math.round(item.cloudCover*100)}% </Col>\n                                    <Col>Ozone : </Col> <Col> {item.ozone} DU </Col>\n\n                                </Row>\n                            </div>\n                        );\n                    } )}\n                </div>\n                : \n                <div>Loding...</div>\n            } \n        </div>\n    );\n};","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/Tabs/AirqualityTabComponent.tsx",["86","87"],"import './tabsStyles.css';\nimport { Tab , Tabs, Col, Row, Container } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport Moment from 'react-moment';\n\nexport default function AirqualityTab(props: any) {\n    \n    // const [ok, setOk] = useState(false);\n    const [status,setStatus] = useState<string>('');\n    const [message, setMessage] = useState<string>('');\n    const [caution, setCaution] = useState<string>('');\n    const [color, setColor] = useState<string>('');\n    const [date,setDate] = useState();\n    \n    useEffect(()=> {\n        // console.log(props);\n        // setOk(true);\n    \n        let airQ = props.data.list[0].main.aqi;\n        setDate(props.data.list[0].dt);\n        if(airQ === 1) {\n            setStatus(\"Good\");\n            setMessage(\"Air quality is considered satisfactory, and air pollution poses little or no risk.\");\n            setCaution(\"None\");\n            setColor(\"#1eff005e\");\n        }\n        if(airQ === 2) {\n            setStatus(\"Fair\");\n            setMessage(\"Air quality is acceptable. However, for some pollutants there may be a moderate health concern for a very small number of people who are unusually sensitive to air pollution.\");\n            setCaution(\"Active children and adults, and people with respiratory disease, such as asthma, should limit prolonged outdoor exertion.\");\n            setColor(\"#ffd00085\");\n        }\n        if(airQ === 3) {\n            setStatus(\"Moderate\");\n            setMessage(\"Members of sensitive groups may experience health effects. The general public is not likely to be affected.\");\n            setCaution(\"Active children and adults, and people with respiratory disease, such as asthma, should limit prolonged outdoor exertion.\");\n            setColor(\"#ff880065\");\n        }\n        if(airQ === 4) {\n            setStatus(\"Poor\");\n            setMessage(\"Everyone may begin to experience health effects. members of sensitive groups may experience more serious health effects\");\n            setCaution(\"Active children and adults, and people with respiratory disease, such as asthma, should avoid prolonged outdoor exertion; everyone else, especially children, should limit prolonged outdoor exertion\");\n            setColor(\"#4400ff69\");\n        }\n        if(airQ === 5) {\n            setStatus(\"Very Poor\");\n            setMessage(\"Health alert : everyone may experience more serious health effects\");\n            setCaution(\"Everyone should avoid all outdoor exertion\");\n            setColor(\"#ff000069\");\n        }\n    },[props]);\n\n    return (\n        <div className=\"make-visible\">\n            <h3>Air Quality</h3>\n            {/* {ok? */}\n\n            <div>\n                <p> Air Quality Index : {props.data.list[0].main.aqi} out of 5 </p>\n                <p> <Moment unix>{date}</Moment> </p>\n                <Container>\n                    <Container className=\"aqi-badge\" style={{backgroundColor:`${color}`}}>\n                        <h4 style={{fontWeight:\"bolder\"}}>Air Quality is {status} </h4>\n                        <p>{message}</p>\n                        <p>{caution}</p>\n                    </Container>\n                    <Row xs={2} md={4} className=\"clean-box\">\n                        <Col>Carbon monoxide(CO₂) : </Col>\n                        <Col>{props.data.list[0].components.co} μg/m³</Col>\n                        <Col>Ammonia(NH₃) : </Col>\n                        <Col>{props.data.list[0].components.nh3} μg/m³</Col>\n                    </Row>\n                    <Row xs={2} md={4} className=\"clean-box\">\n                        <Col>Nitrogen monoxide(NO) : </Col>\n                        <Col>{props.data.list[0].components.no} μg/m³</Col>\n                        <Col>Nitrogen dioxide(NO₂) : </Col>\n                        <Col>{props.data.list[0].components.no2} μg/m³</Col>\n                    </Row>\n                    <Row xs={2} md={4} className=\"clean-box\">\n                        <Col>Ozone(O₃) : </Col>\n                        <Col>{props.data.list[0].components.o3} μg/m³</Col>\n                        <Col>Sulphur dioxide(SO₂) : </Col>\n                        <Col>{props.data.list[0].components.so2} μg/m³</Col>\n                    </Row>\n                    <Row xs={2} md={4} className=\"clean-box\">\n                        <Col>Fine particles matter(PM₂.₅) : </Col>\n                        <Col>{props.data.list[0].components.pm2_5} μg/m³</Col>\n                        <Col>Coarse particulate matter(PM₁₀) : </Col>\n                        <Col>{props.data.list[0].components.pm10} μg/m³</Col>\n                    </Row>\n                </Container>\n            </div> \n            {/* :  */}\n            {/* <div> Loading... </div> */}\n            {/* } */}\n        </div>\n    );\n};","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/Tabs/NowTabComponent.tsx",["88","89"],"import './tabsStyles.css';\nimport { Tab , Tabs, Col, Row, Container } from 'react-bootstrap';\n\nexport default function NowTab(props: any) {\n    // console.log(props);\n\n    const convertTimeStamp = (unixTimestamp: number) => {\n        let time = new Date(unixTimestamp * 1000).toLocaleTimeString(\"en-US\");\n        return time;\n    }\n\n    return (\n        <div className=\"make-visible\">\n            <h2>Now</h2>\n            <Container>\n                <Row>\n                    <Col className=\"clean-box-cap\">\n                        {props.data.daily.data[0].summary} And also there is {Math.round(props.data.daily.data[0].precipProbability * 100)}% chance of rain.\n                    </Col>\n                </Row>\n                <Row xs={2} md={4} className=\"clean-box\">\n                    <Col>High : </Col>\n                    <Col>{props.data.daily.data[0].temperatureHigh} °C</Col>\n                    <Col>Low : </Col>\n                    <Col>{props.data.daily.data[0].temperatureLow} °C</Col>\n                </Row>\n                <Row xs={2} md={4} className=\"clean-box\">\n                    <Col>Sunrise : </Col>\n                    <Col>{convertTimeStamp(props.data.daily.data[0].sunriseTime)}</Col>\n                    <Col>Sunset : </Col>\n                    <Col>{convertTimeStamp(props.data.daily.data[0].sunsetTime)}</Col>\n                </Row>\n                \n                <Row xs={2} md={4} className=\"clean-box\">\n                    <Col>Dew Point : </Col>\n                    <Col> {props.data.daily.data[0].dewPoint}°C </Col>\n                    <Col>Visibility : </Col>\n                    <Col> {props.data.daily.data[0].visibility} Km </Col>\n                </Row>\n                <Row xs={2} md={4} className=\"clean-box\">\n                    <Col>Wind : </Col>\n                    <Col> {props.data.daily.data[0].windSpeed} m/sec </Col>\n                    <Col>Wind Direction : </Col>\n                    <Col> {props.data.daily.data[0].windBearing}° </Col>\n                </Row>\n                <Row xs={2} md={4} className=\"clean-box\">\n                    <Col>Wind Gust : </Col>\n                    <Col> {props.data.daily.data[0].windGust} m/sec </Col>\n                    <Col>Wind Gust Time : </Col>\n                    <Col> {convertTimeStamp(props.data.daily.data[0].windGustTime)} </Col>\n                </Row>\n                <Row xs={2} md={4} className=\"clean-box\">\n                    <Col>UV Index : </Col>\n                    <Col> {props.data.daily.data[0].uvIndex} out of 10 </Col>\n                    <Col>Humidity : </Col>\n                    <Col> {Math.round(props.data.daily.data[0].humidity * 100)}% </Col>\n                </Row>\n                <Row xs={2} md={4} className=\"clean-box\">\n                    <Col>Pressure : </Col>\n                    <Col> {props.data.daily.data[0].pressure} mb </Col>\n                    <Col>Moon Phase : </Col>\n                    <Col> {props.data.daily.data[0].moonPhase} </Col>\n                </Row>\n                <Row xs={2} md={4} className=\"clean-box\">\n                    <Col>Cloud Cover : </Col>\n                    <Col> {Math.round(props.data.daily.data[0].cloudCover * 100)}% </Col>\n                    <Col>Ozone : </Col>\n                    <Col> {props.data.daily.data[0].ozone} DU </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};",["90","91"],"/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/ContactComponent.tsx",[],"/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/Tabs/DailyTabComponent.tsx",["92","93","94"],"import './tabsStyles.css';\nimport { Tab , Tabs, Col, Row, Container } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport Moment from 'react-moment';\n\nexport default function DailyTab(props: any) {\n    const [ok, setOk] = useState(false);\n\n    useEffect(() => {\n        if(props.data !== undefined || props.data !== null){\n            setOk(true);\n        }\n    },[props]);\n\n    const convertTimeStamp = (unixTimestamp: number) => {\n        let time = new Date(unixTimestamp * 1000).toLocaleTimeString(\"en-US\");\n        return time;\n    }\n\n    return (\n        <div className=\"make-visible\">\n            <h2>Daily Forecast</h2>\n            {ok ? \n                <div>\n                    {props.data.daily.data.map((item:any) => {\n                        let icon_path = \"icons/\" + item.icon + \".svg\";\n                        return(\n                            <Container className=\"clean-box\">\n                                <Row>\n                                    <Col xs={3}> <img className=\"minor-icons\" src={icon_path} /> </Col>\n                                    {/* <Col>Time : </Col>  */}\n                                    <Col > <Moment unix>{item.time}</Moment> </Col>\n                                    <Col >{item.summary} and there is {Math.round(item.precipProbability)*100}% chance of rain.</Col> <Col xs={8}></Col>\n                                    \n                                </Row>\n                                <Row xs={2} md={4} >\n                                    <Col>Max : </Col> <Col> {item.temperatureMax} °C</Col>\n                                    <Col>Min : </Col> <Col> {item.temperatureMin} °C </Col>\n                                    \n                                    <Col>Sunrise : </Col> <Col> {convertTimeStamp(item.sunriseTime)} </Col>\n                                    <Col>Sunset : </Col> <Col> {convertTimeStamp(item.sunsetTime)} </Col>\n                                    \n                                    <Col>Pressure : </Col> <Col> {item.pressure} mb </Col>\n                                    <Col>Visibility : </Col> <Col> {item.visibility} Km </Col>\n                                    \n                                    <Col>Wind : </Col> <Col> {item.windSpeed} m/sec </Col>\n                                    <Col xs={7}>Wind Direction : </Col> <Col xs={1}> {item.windBearing}° </Col>\n                                    <Col>Humidity : </Col> <Col> {Math.round(item.humidity*100)}% </Col>\n                                    <Col>UV Index : </Col> <Col> {item.uvIndex} out of 10 </Col>\n                                    <Col>Clouds : </Col> <Col> {Math.round(item.cloudCover*100)}% </Col>\n                                    <Col>Ozone : </Col> <Col> {item.ozone} DU </Col>\n\n                                    <Col>Moon Phase : </Col> <Col> {item.moonPhase*100}% </Col>\n                                    <Col>Dew Point : </Col> <Col> {item.dewPoint} °C </Col>\n                                    \n                                </Row>\n                            </Container>\n                        );\n                    } )}\n                </div>\n                : \n                <div>Loding...</div>\n            } \n        </div>\n    );\n};","/home/shikhar/Files/Web/React/weather-forcasting-application/src/components/Tabs/AlertsTabComponents.tsx",[],{"ruleId":"95","severity":1,"message":"96","line":39,"column":17,"nodeType":"97","messageId":"98","endLine":39,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":194,"column":33,"nodeType":"101","endLine":194,"endColumn":75},{"ruleId":"99","severity":1,"message":"100","line":203,"column":39,"nodeType":"101","endLine":203,"endColumn":107},{"ruleId":"99","severity":1,"message":"100","line":204,"column":39,"nodeType":"101","endLine":204,"endColumn":106},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"102","replacedBy":"108"},{"ruleId":"104","replacedBy":"109"},{"ruleId":"95","severity":1,"message":"110","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"111","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":20},{"ruleId":"95","severity":1,"message":"112","line":2,"column":32,"nodeType":"97","messageId":"98","endLine":2,"endColumn":41},{"ruleId":"95","severity":1,"message":"113","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":17},{"ruleId":"95","severity":1,"message":"114","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":12},{"ruleId":"99","severity":1,"message":"100","line":29,"column":50,"nodeType":"101","endLine":29,"endColumn":97},{"ruleId":"95","severity":1,"message":"110","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"111","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":20},{"ruleId":"95","severity":1,"message":"110","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"111","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":20},{"ruleId":"102","replacedBy":"115"},{"ruleId":"104","replacedBy":"116"},{"ruleId":"95","severity":1,"message":"110","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"111","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":30,"column":50,"nodeType":"101","endLine":30,"endColumn":97},"@typescript-eslint/no-unused-vars","'setDay' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["117"],"no-negated-in-lhs",["118"],["117"],["118"],["117"],["118"],"'Tab' is defined but never used.","'Tabs' is defined but never used.","'Container' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.",["117"],["118"],"no-global-assign","no-unsafe-negation"]